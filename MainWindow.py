# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_PasswordGenerator(object):
    def setupUi(self, PasswordGenerator):

        '''
         Password Generator:
            Main Window
        '''        
        PasswordGenerator.setObjectName("PasswordGenerator")
        PasswordGenerator.resize(569, 504)
        PasswordGenerator.setAutoFillBackground(True)
        QtCore.QMetaObject.connectSlotsByName(PasswordGenerator)


        '''
         Central Widget Settings 
         Scroll Area Setup
        '''        
        self.centralwidget = QtWidgets.QWidget(PasswordGenerator)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.scrollArea = QtWidgets.QScrollArea(self.centralwidget)
        self.scrollArea.setStyleSheet("background: qlineargradient(spread:pad, x1:0.006, y1:0, x2:0.745, y2:0, stop:0 rgba(0, 0, 0, 255), stop:1 rgba(0, 0, 127, 255))")
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents_9 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_9.setGeometry(QtCore.QRect(-26, 0, 618, 1318))
        self.scrollAreaWidgetContents_9.setObjectName("scrollAreaWidgetContents_9")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents_9)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.frame = QtWidgets.QFrame(self.scrollAreaWidgetContents_9)
        self.frame.setMinimumSize(QtCore.QSize(600, 1300))
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.widget = QtWidgets.QWidget(self.frame)
        self.widget.setGeometry(QtCore.QRect(-11, -1, 1801, 3000))
        self.widget.setMinimumSize(QtCore.QSize(1800, 1800))
        self.widget.setAutoFillBackground(False)
        self.widget.setObjectName("widget")

        '''
         IncludeLeetCheck:
            A check box to include leet combinations for a custom word. 
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: None
            Type: CheckBox
        '''        
        
        self.IncludeLeetCheck = QtWidgets.QCheckBox(self.widget)
        self.IncludeLeetCheck.setGeometry(QtCore.QRect(40, 70, 13, 13))
        self.IncludeLeetCheck.setStyleSheet("background: rgb(255, 255, 255)")
        self.IncludeLeetCheck.setText("")
        self.IncludeLeetCheck.setObjectName("IncludeLeetCheck")

        '''
         IncludeNumsSufCheck:
            A check box to include combination of numbers as suffixes to the combinations
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: None
            Type: CheckBox
        ''' 

        self.IncludeNumsSufCheck = QtWidgets.QCheckBox(self.widget)
        self.IncludeNumsSufCheck.setGeometry(QtCore.QRect(40, 370, 13, 13))
        self.IncludeNumsSufCheck.setStyleSheet("background: rgb(255, 255, 255)")
        self.IncludeNumsSufCheck.setText("")
        self.IncludeNumsSufCheck.setObjectName("IncludeNumsSufCheck")

        '''
         DefaultListLabel:
            Label for including default list for the WordList.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: Label
        ''' 

        self.DefaultListLabel = QtWidgets.QLabel(self.widget)
        self.DefaultListLabel.setGeometry(QtCore.QRect(160, 780, 161, 16))
        self.DefaultListLabel.setStyleSheet("background: rgb(255, 255, 255)")
        self.DefaultListLabel.setWordWrap(True)
        self.DefaultListLabel.setObjectName("DefaultListLabel")

        '''
         MaxComboLenCheck:
            A spin box to set the max length for the combinatios generated by the word list.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: None
            Type: SpinBox
        '''         

        self.MaxComboLenCheck = QtWidgets.QSpinBox(self.widget)
        self.MaxComboLenCheck.setGeometry(QtCore.QRect(40, 870, 42, 22))
        self.MaxComboLenCheck.setStyleSheet("background: rgb(255, 255, 255)")
        self.MaxComboLenCheck.setObjectName("MaxComboLenCheck")

        '''
         AddPrefixLabel:
            A label for including a prefix. 
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: Label
        '''     

        self.AddPrefixLabel = QtWidgets.QLabel(self.widget)
        self.AddPrefixLabel.setGeometry(QtCore.QRect(160, 230, 61, 21))
        self.AddPrefixLabel.setStyleSheet("background: rgb(255, 255, 255)")
        self.AddPrefixLabel.setWordWrap(True)
        self.AddPrefixLabel.setObjectName("AddPrefixLabel")

        '''
         IncludeNumsLabel:
            A label to include numbers in the word list.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: Label
        ''' 

        self.IncludeNumsLabel = QtWidgets.QLabel(self.widget)
        self.IncludeNumsLabel.setGeometry(QtCore.QRect(160, 740, 91, 16))
        self.IncludeNumsLabel.setStyleSheet("background: rgb(255, 255, 255)")
        self.IncludeNumsLabel.setWordWrap(True)
        self.IncludeNumsLabel.setObjectName("IncludeNumsLabel")

        '''
         CustomListText:
            A text box to use a custom list for generating the WordList. 
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: None
            Type: TextEdit
        '''

        self.CustomListText = QtWidgets.QTextEdit(self.widget)
        self.CustomListText.setGeometry(QtCore.QRect(40, 910, 101, 31))
        self.CustomListText.setStyleSheet("background: rgb(255, 255, 255)")
        self.CustomListText.setObjectName("CustomListText")

        '''
         CustomListLabel:
            A label to use a custom list for generating the WordList. 
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: Label
        ''' 

        self.CustomListLabel = QtWidgets.QLabel(self.widget)
        self.CustomListLabel.setGeometry(QtCore.QRect(160, 910, 271, 31))
        self.CustomListLabel.setStyleSheet("background: rgb(255, 255, 255)")
        self.CustomListLabel.setWordWrap(True)
        self.CustomListLabel.setObjectName("CustomListLabel")

        '''
         MinComboLenCheck:
            A spin box to set the minimum length of the combinations generated for the WordList. 
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: None
            Type: SpinBox
        ''' 

        self.MinComboLenCheck = QtWidgets.QSpinBox(self.widget)
        self.MinComboLenCheck.setGeometry(QtCore.QRect(40, 830, 42, 22))
        self.MinComboLenCheck.setStyleSheet("background: rgb(255, 255, 255)")
        self.MinComboLenCheck.setObjectName("MinComboLenCheck")
        
        '''
         SuffixNumLenLabel:
            A label to set the max length for the numerical suffixes. 
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: Label
        ''' 

        self.SuffixNumLenLabel = QtWidgets.QLabel(self.widget)
        self.SuffixNumLenLabel.setGeometry(QtCore.QRect(160, 450, 151, 20))
        self.SuffixNumLenLabel.setStyleSheet("background: rgb(255, 255, 255)")
        self.SuffixNumLenLabel.setWordWrap(True)
        self.SuffixNumLenLabel.setObjectName("SuffixNumLenLabel")

        '''
         LeetCombinationsLabel:
            A label to include leet combinations for a custom word. 
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: Label
        ''' 

        self.LeetCombinationsLabel = QtWidgets.QLabel(self.widget)
        self.LeetCombinationsLabel.setGeometry(QtCore.QRect(160, 70, 131, 21))
        self.LeetCombinationsLabel.setAutoFillBackground(False)
        self.LeetCombinationsLabel.setStyleSheet("background: rgb(255, 255, 255)")
        self.LeetCombinationsLabel.setWordWrap(True)
        self.LeetCombinationsLabel.setObjectName("LeetCombinationsLabel")

        '''
         IncludeCombosLabel:
            A label to include leet combinations of the prefixes or suffixes. 
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: Label
        ''' 

        self.IncludeCombosLabel = QtWidgets.QLabel(self.widget)
        self.IncludeCombosLabel.setGeometry(QtCore.QRect(160, 310, 211, 16))
        self.IncludeCombosLabel.setStyleSheet("background: rgb(255, 255, 255)")
        self.IncludeCombosLabel.setWordWrap(True)
        self.IncludeCombosLabel.setObjectName("IncludeCombosLabel")

        '''
         MaxComboLenLabel:
            A label to set the max length for the combinations generator for the WordList.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: Label
        ''' 

        self.MaxComboLenLabel = QtWidgets.QLabel(self.widget)
        self.MaxComboLenLabel.setGeometry(QtCore.QRect(160, 870, 101, 20))
        self.MaxComboLenLabel.setStyleSheet("background: rgb(255, 255, 255)")
        self.MaxComboLenLabel.setWordWrap(True)
        self.MaxComboLenLabel.setObjectName("MaxComboLenLabel")

        '''
         IncludeNumsCheck:
            A check box to include numbers for generating the WordList. 
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: None
            Type: CheckBox
        ''' 

        self.IncludeNumsCheck = QtWidgets.QCheckBox(self.widget)
        self.IncludeNumsCheck.setGeometry(QtCore.QRect(40, 740, 13, 13))
        self.IncludeNumsCheck.setStyleSheet("background: rgb(255, 255, 255)")
        self.IncludeNumsCheck.setText("")
        self.IncludeNumsCheck.setObjectName("IncludeNumsCheck")

        '''
         GenWordListLabel:
            A label to generate a WordList.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: Label
        ''' 

        self.GenWordListLabel = QtWidgets.QLabel(self.widget)
        self.GenWordListLabel.setGeometry(QtCore.QRect(160, 100, 111, 16))
        self.GenWordListLabel.setAutoFillBackground(False)
        self.GenWordListLabel.setStyleSheet("background: rgb(255, 255, 255)")
        self.GenWordListLabel.setWordWrap(True)
        self.GenWordListLabel.setObjectName("GenWordListLabel")

        '''
         IncludeNumsSufLabel:
            A label to include numberical combinations as suffix
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: Label
        ''' 

        self.IncludeNumsSufLabel = QtWidgets.QLabel(self.widget)
        self.IncludeNumsSufLabel.setGeometry(QtCore.QRect(160, 370, 131, 20))
        self.IncludeNumsSufLabel.setStyleSheet("background: rgb(255, 255, 255)")
        self.IncludeNumsSufLabel.setWordWrap(True)
        self.IncludeNumsSufLabel.setObjectName("IncludeNumsSufLabel")
        
        '''
         PrefixSuffixSettingsLabel:
            Heading label for the prefix and suffix settings.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: Label
        ''' 

        self.PrefixSuffixSettingsLabel = QtWidgets.QLabel(self.widget)
        self.PrefixSuffixSettingsLabel.setGeometry(QtCore.QRect(30, 190, 211, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.PrefixSuffixSettingsLabel.setFont(font)
        self.PrefixSuffixSettingsLabel.setStyleSheet("background: rgb(255, 255, 255)")
        self.PrefixSuffixSettingsLabel.setWordWrap(True)
        self.PrefixSuffixSettingsLabel.setObjectName("PrefixSuffixSettingsLabel")

        '''
         CustomWordsText:
            A text box to make combinations for a custom word.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: TextEdit
        ''' 

        self.CustomWordsText = QtWidgets.QTextEdit(self.widget)
        self.CustomWordsText.setGeometry(QtCore.QRect(40, 130, 104, 31))
        self.CustomWordsText.setStyleSheet("background: rgb(255, 255, 255)")
        self.CustomWordsText.setObjectName("CustomWordsText")
        
        '''
         WLSettingsLabel:
            Heading label for WordList settings.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: Label
        ''' 

        self.WLSettingsLabel = QtWidgets.QLabel(self.widget)
        self.WLSettingsLabel.setGeometry(QtCore.QRect(30, 660, 191, 51))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.WLSettingsLabel.setFont(font)
        self.WLSettingsLabel.setAutoFillBackground(False)
        self.WLSettingsLabel.setStyleSheet("background: rgb(255, 255, 255)")
        self.WLSettingsLabel.setWordWrap(True)
        self.WLSettingsLabel.setObjectName("WLSettingsLabel")

        '''
         PrefixNumLenLabel:
            A label to set the max length of the numerical combinations in the prefix.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: Label
        '''       

        self.PrefixNumLenLabel = QtWidgets.QLabel(self.widget)
        self.PrefixNumLenLabel.setGeometry(QtCore.QRect(160, 410, 151, 20))
        self.PrefixNumLenLabel.setStyleSheet("background: rgb(255, 255, 255)")
        self.PrefixNumLenLabel.setWordWrap(True)
        self.PrefixNumLenLabel.setObjectName("PrefixNumLenLabel")

        '''
         IncludeCombosCheck:
            A check box to include combination of prefix or suffix.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: CheckBox
        ''' 

        self.IncludeCombosCheck = QtWidgets.QCheckBox(self.widget)
        self.IncludeCombosCheck.setEnabled(True)
        self.IncludeCombosCheck.setGeometry(QtCore.QRect(40, 310, 13, 13))
        self.IncludeCombosCheck.setStyleSheet("background: rgb(255, 255, 255)")
        self.IncludeCombosCheck.setText("")
        self.IncludeCombosCheck.setChecked(False)
        self.IncludeCombosCheck.setObjectName("IncludeCombosCheck")
        
        '''
         CustomWordLabel:
            A label to use a custom word for generating combos.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: Label
        ''' 

        self.CustomWordsLabel = QtWidgets.QLabel(self.widget)
        self.CustomWordsLabel.setGeometry(QtCore.QRect(160, 130, 231, 31))
        self.CustomWordsLabel.setStyleSheet("background: rgb(255, 255, 255)")
        self.CustomWordsLabel.setWordWrap(True)
        self.CustomWordsLabel.setObjectName("CustomWordsLabel")
        
        '''
         IncludeWLcheck:
            A check box to generate a WordList.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: CheckBox
        ''' 

        self.IncludeWLCheck = QtWidgets.QCheckBox(self.widget)
        self.IncludeWLCheck.setGeometry(QtCore.QRect(40, 100, 13, 13))
        self.IncludeWLCheck.setStyleSheet("background: rgb(255, 255, 255)")
        self.IncludeWLCheck.setText("")
        self.IncludeWLCheck.setChecked(False)
        self.IncludeWLCheck.setObjectName("IncludeWLCheck")

        '''
         ExtendDefaultListText:
            A text box to extend the default list (a-z) for generating the WordList.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: TextEdit
        ''' 

        self.ExtendDefaultListText = QtWidgets.QTextEdit(self.widget)
        self.ExtendDefaultListText.setGeometry(QtCore.QRect(40, 960, 101, 31))
        self.ExtendDefaultListText.setStyleSheet("background: rgb(255, 255, 255)")
        self.ExtendDefaultListText.setObjectName("ExtendDefaultListText")

        '''
         GenerateButton:
            A push button to generate the cominations based on settings and store the combinations in a text file.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: PushButton
        ''' 

        self.GenerateButton = QtWidgets.QPushButton(self.widget)
        self.GenerateButton.setGeometry(QtCore.QRect(90, 1220, 151, 61))
        self.GenerateButton.setStyleSheet("background: rgb(255, 255, 255)")
        self.GenerateButton.setObjectName("GenerateButton")

        '''
         MinComboLenLabel:
            A label to set the minimum length of the combinations being generated for the WordList.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: Label
        ''' 

        self.MinComboLenLabel = QtWidgets.QLabel(self.widget)
        self.MinComboLenLabel.setGeometry(QtCore.QRect(160, 820, 91, 20))
        self.MinComboLenLabel.setStyleSheet("background: rgb(255, 255, 255)")
        self.MinComboLenLabel.setWordWrap(True)
        self.MinComboLenLabel.setObjectName("MinComboLenLabel")

        '''
         AddPrefixText:
            A text box to add a text as the prefix to the combinations being generated.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: TextEdit
        ''' 

        self.AddPrefixText = QtWidgets.QTextEdit(self.widget)
        self.AddPrefixText.setGeometry(QtCore.QRect(40, 220, 104, 31))
        self.AddPrefixText.setStyleSheet("background: rgb(255, 255, 255)")
        self.AddPrefixText.setObjectName("AddPrefixText")
        self.AddSuffixText = QtWidgets.QTextEdit(self.widget)
        self.AddSuffixText.setGeometry(QtCore.QRect(40, 270, 104, 31))
        self.AddSuffixText.setStyleSheet("background: rgb(255, 255, 255)")
        self.AddSuffixText.setObjectName("AddSuffixText")

        '''
         IncludeNumsPreLabel:
            A label to include numerical combinations as a prefix to the combinations being generated.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: Label
        ''' 

        self.IncludeNumsPreLabel = QtWidgets.QLabel(self.widget)
        self.IncludeNumsPreLabel.setGeometry(QtCore.QRect(160, 340, 131, 20))
        self.IncludeNumsPreLabel.setStyleSheet("background: rgb(255, 255, 255)")
        self.IncludeNumsPreLabel.setWordWrap(True)
        self.IncludeNumsPreLabel.setObjectName("IncludeNumsPreLabel")

        '''
         ExtandDefaultListLabel:
            A label to extend the default list being used to generate the WordList.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: Label
        ''' 

        self.ExtandDefaultListLabel = QtWidgets.QLabel(self.widget)
        self.ExtandDefaultListLabel.setGeometry(QtCore.QRect(160, 960, 161, 31))
        self.ExtandDefaultListLabel.setStyleSheet("background: rgb(255, 255, 255)")
        self.ExtandDefaultListLabel.setWordWrap(True)
        self.ExtandDefaultListLabel.setObjectName("ExtandDefaultListLabel")

        '''
         SuffixNumLenCheck:
            A spin box to set the max length for the numerical combinations as suffix.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: SpinBox
        ''' 

        self.SuffixNumLenCheck = QtWidgets.QSpinBox(self.widget)
        self.SuffixNumLenCheck.setGeometry(QtCore.QRect(40, 450, 42, 22))
        self.SuffixNumLenCheck.setStyleSheet("background: rgb(255, 255, 255)")
        self.SuffixNumLenCheck.setObjectName("SuffixNumLenCheck")

        '''
         GenralSettingsLabel:
            Heading label for the general settings.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: Label
        ''' 

        self.GenralSettingsLabel = QtWidgets.QLabel(self.widget)
        self.GenralSettingsLabel.setGeometry(QtCore.QRect(30, 20, 151, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.GenralSettingsLabel.setFont(font)
        self.GenralSettingsLabel.setAutoFillBackground(False)
        self.GenralSettingsLabel.setStyleSheet("background: rgb(255, 255, 255)")
        self.GenralSettingsLabel.setWordWrap(True)
        self.GenralSettingsLabel.setObjectName("GenralSettingsLabel")

        '''
         PrefixNumLenCheck:
            A spin box to set the max length for the numerical combinations as prefix.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: SpinBox
        ''' 

        self.PrefixNumLenCheck = QtWidgets.QSpinBox(self.widget)
        self.PrefixNumLenCheck.setGeometry(QtCore.QRect(40, 410, 42, 22))
        self.PrefixNumLenCheck.setStyleSheet("background: rgb(255, 255, 255)")
        self.PrefixNumLenCheck.setObjectName("PrefixNumLenCheck")

        '''
         DefaultListCheck:
            A check box to include the default list (a-z) to be used for generating the WordList.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: CheckBox
        ''' 

        self.DefaultListCheck = QtWidgets.QCheckBox(self.widget)
        self.DefaultListCheck.setGeometry(QtCore.QRect(40, 780, 13, 13))
        self.DefaultListCheck.setStyleSheet("background: rgb(255, 255, 255)")
        self.DefaultListCheck.setText("")
        self.DefaultListCheck.setObjectName("DefaultListCheck")

        '''
         IncludeNumsPreCheck:
            A check box to include numerical combinations as prefix.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: CheckBox
        ''' 

        self.IncludeNumsPreCheck = QtWidgets.QCheckBox(self.widget)
        self.IncludeNumsPreCheck.setGeometry(QtCore.QRect(40, 340, 13, 13))
        self.IncludeNumsPreCheck.setStyleSheet("background: rgb(255, 255, 255)")
        self.IncludeNumsPreCheck.setText("")
        self.IncludeNumsPreCheck.setChecked(False)
        self.IncludeNumsPreCheck.setObjectName("IncludeNumsPreCheck")

        '''
         AddSuffixLabel:
            A label to include a text as suffix.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: Label
        ''' 

        self.AddSuffixLabel = QtWidgets.QLabel(self.widget)
        self.AddSuffixLabel.setGeometry(QtCore.QRect(160, 270, 71, 21))
        self.AddSuffixLabel.setStyleSheet("background: rgb(255, 255, 255)")
        self.AddSuffixLabel.setWordWrap(True)
        self.AddSuffixLabel.setObjectName("AddSuffixLabel")

        '''
         MinPreComboLenCheck:
            A spin box to set the minimum length for the numerical combinations for prefix.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: SpinBox
        ''' 

        self.MinPreComboLenCheck = QtWidgets.QSpinBox(self.widget)
        self.MinPreComboLenCheck.setGeometry(QtCore.QRect(40, 490, 42, 22))
        self.MinPreComboLenCheck.setStyleSheet("background: rgb(255, 255, 255)")
        self.MinPreComboLenCheck.setObjectName("MinPreComboLenCheck")

        #add docstring
        self.MinSufComboLenCheck = QtWidgets.QSpinBox(self.widget)
        self.MinSufComboLenCheck.setGeometry(QtCore.QRect(40, 530, 42, 22))
        self.MinSufComboLenCheck.setStyleSheet("background: rgb(255, 255, 255)")
        self.MinSufComboLenCheck.setObjectName("MinSufComboLenCheck")

        '''
         MinPreComboLenLabel:
            A label to set the minimum length for the numerical combinations for pefix.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: Label
        ''' 

        self.MinPreComboLenLabel = QtWidgets.QLabel(self.widget)
        self.MinPreComboLenLabel.setGeometry(QtCore.QRect(160, 490, 151, 20))
        self.MinPreComboLenLabel.setStyleSheet("background: rgb(255, 255, 255)")
        self.MinPreComboLenLabel.setWordWrap(True)
        self.MinPreComboLenLabel.setObjectName("MinPreComboLenLabel")

        '''
         MinSufComboLenLabel:
            A label to set the minimum length for the numercial combinations for suffix.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: Label
        ''' 

        self.MinSufComboLenLabel = QtWidgets.QLabel(self.widget)
        self.MinSufComboLenLabel.setGeometry(QtCore.QRect(160, 530, 151, 20))
        self.MinSufComboLenLabel.setStyleSheet("background: rgb(255, 255, 255)")
        self.MinSufComboLenLabel.setWordWrap(True)
        self.MinSufComboLenLabel.setObjectName("MinSufComboLenLabel")

        '''
         IncludeWLpreCheck:
            A check box to include a word list as prefix.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: CheckBox
        ''' 

        self.IncludeWLpreCheck = QtWidgets.QCheckBox(self.widget)
        self.IncludeWLpreCheck.setGeometry(QtCore.QRect(40, 580, 13, 13))
        self.IncludeWLpreCheck.setStyleSheet("background: rgb(255, 255, 255)")
        self.IncludeWLpreCheck.setText("")
        self.IncludeWLpreCheck.setObjectName("IncludeWLpreCheck")

        '''
         IncludeWLPreLabel:
            A label to include a word list as prefix.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: Label
        ''' 

        self.IncludeWLPrelabel = QtWidgets.QLabel(self.widget)
        self.IncludeWLPrelabel.setGeometry(QtCore.QRect(160, 569, 141, 31))
        self.IncludeWLPrelabel.setStyleSheet("background: rgb(255, 255, 255)")
        self.IncludeWLPrelabel.setWordWrap(True)
        self.IncludeWLPrelabel.setObjectName("IncludeWLPrelabel")
        
        '''
         IncludeWLSufCheck:
            A check box to include a wordlist as prefix.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: CheckBox
        ''' 
      
        self.IncludeWLSufCheck = QtWidgets.QCheckBox(self.widget)
        self.IncludeWLSufCheck.setGeometry(QtCore.QRect(40, 620, 13, 13))
        self.IncludeWLSufCheck.setStyleSheet("background: rgb(255, 255, 255)")
        self.IncludeWLSufCheck.setText("")
        self.IncludeWLSufCheck.setObjectName("IncludeWLSufCheck")
        
        '''
         IncludeWLSufLabel:
            A label to include a word list as suffix.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: Label
        ''' 

        self.IncludeWLSufLabel = QtWidgets.QLabel(self.widget)
        self.IncludeWLSufLabel.setGeometry(QtCore.QRect(160, 610, 141, 31))
        self.IncludeWLSufLabel.setStyleSheet("background: rgb(255, 255, 255)")
        self.IncludeWLSufLabel.setWordWrap(True)
        self.IncludeWLSufLabel.setObjectName("IncludeWLSufLabel")

        '''
         StoreComboLabel:
            A label for storing combinations.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: Label
        ''' 

        self.StoreComboLabel = QtWidgets.QLabel(self.widget)
        self.StoreComboLabel.setGeometry(QtCore.QRect(40, 1030, 191, 51))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.StoreComboLabel.setFont(font)
        self.StoreComboLabel.setAutoFillBackground(False)
        self.StoreComboLabel.setStyleSheet("background: rgb(255, 255, 255)")
        self.StoreComboLabel.setWordWrap(True)
        self.StoreComboLabel.setObjectName("StoreComboLabel")

        '''
         UseDefTxtFileCheck:
            A check box to use the default text file for storing combinations.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: CheckBox
        ''' 

        self.UseDefTxtFileCheck = QtWidgets.QCheckBox(self.widget)
        self.UseDefTxtFileCheck.setGeometry(QtCore.QRect(40, 1110, 13, 13))
        self.UseDefTxtFileCheck.setStyleSheet("background: rgb(255, 255, 255)")
        self.UseDefTxtFileCheck.setText("")
        self.UseDefTxtFileCheck.setObjectName("UseDefTxtFileCheck")

        '''
         UseCustomTxtFileCheck:
            A text box to use a custom file for storing the combinations.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: TextEdit
        ''' 

        self.UseCustomTxtFileCheck = QtWidgets.QTextEdit(self.widget)
        self.UseCustomTxtFileCheck.setGeometry(QtCore.QRect(40, 1150, 101, 31))
        self.UseCustomTxtFileCheck.setStyleSheet("background: rgb(255, 255, 255)")
        self.UseCustomTxtFileCheck.setObjectName("UseCustomTxtFileCheck")

        '''
         UseDefTxtFileLabel:
            A label to use the default text file for storing combinations.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: Label
        ''' 

        self.UseDefTxtFileLabel = QtWidgets.QLabel(self.widget)
        self.UseDefTxtFileLabel.setGeometry(QtCore.QRect(160, 1100, 161, 31))
        self.UseDefTxtFileLabel.setStyleSheet("background: rgb(255, 255, 255)")
        self.UseDefTxtFileLabel.setWordWrap(True)
        self.UseDefTxtFileLabel.setObjectName("UseDefTxtFileLabel")

        '''
         UseCustomTxtFileLabel:
            A label to use a custom text file for storing combinations.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: Label
        ''' 

        self.UseCustomTxtFileLabel = QtWidgets.QLabel(self.widget)
        self.UseCustomTxtFileLabel.setGeometry(QtCore.QRect(160, 1150, 161, 31))
        self.UseCustomTxtFileLabel.setStyleSheet("background: rgb(255, 255, 255)")
        self.UseCustomTxtFileLabel.setWordWrap(True)
        self.UseCustomTxtFileLabel.setObjectName("UseCustomTxtFileLabel")

        '''
         pushButton:
            A button for opening the help section.
        
         Settings:
            Background: White (rgb: 255, 255, 255)
            Text: 
            Type: PushButton
        ''' 

        self.pushButton = QtWidgets.QPushButton(self.widget)
        self.pushButton.setGeometry(QtCore.QRect(434, 20, 91, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("background: rgb(255, 255, 255)")
        self.pushButton.setObjectName("pushButton")


        self.IncludeLeetCheck.raise_()
        self.IncludeNumsSufCheck.raise_()
        self.DefaultListLabel.raise_()
        self.MaxComboLenCheck.raise_()
        self.AddPrefixLabel.raise_()
        self.IncludeNumsLabel.raise_()
        self.CustomListText.raise_()
        self.CustomListLabel.raise_()
        self.MinComboLenCheck.raise_()
        self.SuffixNumLenLabel.raise_()
        self.LeetCombinationsLabel.raise_()
        self.IncludeCombosLabel.raise_()
        self.MaxComboLenLabel.raise_()
        self.IncludeNumsCheck.raise_()
        self.GenWordListLabel.raise_()
        self.IncludeNumsSufLabel.raise_()
        self.PrefixSuffixSettingsLabel.raise_()
        self.CustomWordsText.raise_()
        self.WLSettingsLabel.raise_()
        self.PrefixNumLenLabel.raise_()
        self.IncludeCombosCheck.raise_()
        self.CustomWordsLabel.raise_()
        self.IncludeWLCheck.raise_()
        self.ExtendDefaultListText.raise_()
        self.GenerateButton.raise_()
        self.MinComboLenLabel.raise_()
        self.AddPrefixText.raise_()
        self.AddSuffixText.raise_()
        self.IncludeNumsPreLabel.raise_()
        self.ExtandDefaultListLabel.raise_()
        self.SuffixNumLenCheck.raise_()
        self.PrefixNumLenCheck.raise_()
        self.DefaultListCheck.raise_()
        self.IncludeNumsPreCheck.raise_()
        self.AddSuffixLabel.raise_()
        self.GenralSettingsLabel.raise_()
        self.MinPreComboLenCheck.raise_()
        self.MinSufComboLenCheck.raise_()
        self.MinPreComboLenLabel.raise_()
        self.MinSufComboLenLabel.raise_()
        self.IncludeWLpreCheck.raise_()
        self.IncludeWLPrelabel.raise_()
        self.IncludeWLSufCheck.raise_()
        self.IncludeWLSufLabel.raise_()
        self.StoreComboLabel.raise_()
        self.UseDefTxtFileCheck.raise_()
        self.UseCustomTxtFileCheck.raise_()
        self.UseDefTxtFileLabel.raise_()
        self.UseCustomTxtFileLabel.raise_()
        self.pushButton.raise_()


        self.verticalLayout_2.addWidget(self.frame)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents_9)
        self.verticalLayout.addWidget(self.scrollArea)
        PasswordGenerator.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(PasswordGenerator)
        self.statusbar.setObjectName("statusbar")
        PasswordGenerator.setStatusBar(self.statusbar)
        self.menubar = QtWidgets.QMenuBar(PasswordGenerator)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 569, 21))
        self.menubar.setObjectName("menubar")
        PasswordGenerator.setMenuBar(self.menubar)

        self.retranslateUi(PasswordGenerator)
        QtCore.QMetaObject.connectSlotsByName(PasswordGenerator)

    def retranslateUi(self, PasswordGenerator):


        _translate = QtCore.QCoreApplication.translate
        PasswordGenerator.setWindowTitle(_translate("PasswordGenerator", "MainWindow"))


        self.DefaultListLabel.setText(_translate("PasswordGenerator", "Use default alphabet list (abc...)"))
        self.AddPrefixLabel.setText(_translate("PasswordGenerator", "Add Prefix"))
        self.IncludeNumsLabel.setText(_translate("PasswordGenerator", "Include Numbers"))
        self.CustomListLabel.setText(_translate("PasswordGenerator", "Custom Characters (Overrides the default alphabet list)"))
        self.SuffixNumLenLabel.setText(_translate("PasswordGenerator", "Max. Combo Length for Suffix"))
        self.LeetCombinationsLabel.setText(_translate("PasswordGenerator", "Include Leet Combinatons"))
        self.IncludeCombosLabel.setText(_translate("PasswordGenerator", "Add combinations of prefixes and suffixes"))
        self.MaxComboLenLabel.setText(_translate("PasswordGenerator", "Max. Combo Length"))
        self.GenWordListLabel.setText(_translate("PasswordGenerator", "Generate a word list"))
        self.IncludeNumsSufLabel.setText(_translate("PasswordGenerator", "Add Numbers as suffix"))
        self.PrefixSuffixSettingsLabel.setText(_translate("PasswordGenerator", "Prefix and Suffix settings"))
        self.WLSettingsLabel.setText(_translate("PasswordGenerator", "Settings for word list"))
        self.PrefixNumLenLabel.setText(_translate("PasswordGenerator", "Max. Combo length for prefix"))
        self.CustomWordsLabel.setText(_translate("PasswordGenerator", "Custom word (Combinations for a custom word)"))
        self.GenerateButton.setText(_translate("PasswordGenerator", "Generate Combinations"))
        self.MinComboLenLabel.setText(_translate("PasswordGenerator", "Min. Combo length"))
        self.IncludeNumsPreLabel.setText(_translate("PasswordGenerator", "Add Numbers as prefix"))
        self.ExtandDefaultListLabel.setText(_translate("PasswordGenerator", "Extend the default alphabet list"))
        self.GenralSettingsLabel.setText(_translate("PasswordGenerator", "General Settings"))
        self.AddSuffixLabel.setText(_translate("PasswordGenerator", "Add Suffix"))
        self.MinPreComboLenLabel.setText(_translate("PasswordGenerator", "Min. Combo length for prefix"))
        self.MinSufComboLenLabel.setText(_translate("PasswordGenerator", "Min. Combo length for suffix"))
        self.IncludeWLPrelabel.setText(_translate("PasswordGenerator", "Use a wordlist as prefix"))
        self.IncludeWLSufLabel.setText(_translate("PasswordGenerator", "Use a wordlist as suffix"))
        self.StoreComboLabel.setText(_translate("PasswordGenerator", "Store Combinations"))
        self.UseDefTxtFileLabel.setText(_translate("PasswordGenerator", "Use the default text file"))
        self.UseCustomTxtFileLabel.setText(_translate("PasswordGenerator", "Use a custom text file "))
        self.pushButton.setText(_translate("PasswordGenerator", "Help"))
